/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.accenture.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TextoDadoTipoPessoaCobranca extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5779923116458620493L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TextoDadoTipoPessoaCobranca\",\"namespace\":\"com.accenture.avro\",\"fields\":[{\"name\":\"codigo_tipo_pessoa\",\"type\":\"string\",\"doc\":\"Symbols: F,J\"},{\"name\":\"numero_cadastro_pessoa_fisica\",\"type\":[\"null\",\"string\"]},{\"name\":\"numero_cadastro_nacional_pessoa_juridica\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TextoDadoTipoPessoaCobranca> ENCODER =
      new BinaryMessageEncoder<TextoDadoTipoPessoaCobranca>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TextoDadoTipoPessoaCobranca> DECODER =
      new BinaryMessageDecoder<TextoDadoTipoPessoaCobranca>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TextoDadoTipoPessoaCobranca> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TextoDadoTipoPessoaCobranca> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TextoDadoTipoPessoaCobranca>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TextoDadoTipoPessoaCobranca to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TextoDadoTipoPessoaCobranca from a ByteBuffer. */
  public static TextoDadoTipoPessoaCobranca fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Symbols: F,J */
   private java.lang.CharSequence codigo_tipo_pessoa;
   private java.lang.CharSequence numero_cadastro_pessoa_fisica;
   private java.lang.CharSequence numero_cadastro_nacional_pessoa_juridica;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TextoDadoTipoPessoaCobranca() {}

  /**
   * All-args constructor.
   * @param codigo_tipo_pessoa Symbols: F,J
   * @param numero_cadastro_pessoa_fisica The new value for numero_cadastro_pessoa_fisica
   * @param numero_cadastro_nacional_pessoa_juridica The new value for numero_cadastro_nacional_pessoa_juridica
   */
  public TextoDadoTipoPessoaCobranca(java.lang.CharSequence codigo_tipo_pessoa, java.lang.CharSequence numero_cadastro_pessoa_fisica, java.lang.CharSequence numero_cadastro_nacional_pessoa_juridica) {
    this.codigo_tipo_pessoa = codigo_tipo_pessoa;
    this.numero_cadastro_pessoa_fisica = numero_cadastro_pessoa_fisica;
    this.numero_cadastro_nacional_pessoa_juridica = numero_cadastro_nacional_pessoa_juridica;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return codigo_tipo_pessoa;
    case 1: return numero_cadastro_pessoa_fisica;
    case 2: return numero_cadastro_nacional_pessoa_juridica;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: codigo_tipo_pessoa = (java.lang.CharSequence)value$; break;
    case 1: numero_cadastro_pessoa_fisica = (java.lang.CharSequence)value$; break;
    case 2: numero_cadastro_nacional_pessoa_juridica = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'codigo_tipo_pessoa' field.
   * @return Symbols: F,J
   */
  public java.lang.CharSequence getCodigoTipoPessoa() {
    return codigo_tipo_pessoa;
  }

  /**
   * Sets the value of the 'codigo_tipo_pessoa' field.
   * Symbols: F,J
   * @param value the value to set.
   */
  public void setCodigoTipoPessoa(java.lang.CharSequence value) {
    this.codigo_tipo_pessoa = value;
  }

  /**
   * Gets the value of the 'numero_cadastro_pessoa_fisica' field.
   * @return The value of the 'numero_cadastro_pessoa_fisica' field.
   */
  public java.lang.CharSequence getNumeroCadastroPessoaFisica() {
    return numero_cadastro_pessoa_fisica;
  }

  /**
   * Sets the value of the 'numero_cadastro_pessoa_fisica' field.
   * @param value the value to set.
   */
  public void setNumeroCadastroPessoaFisica(java.lang.CharSequence value) {
    this.numero_cadastro_pessoa_fisica = value;
  }

  /**
   * Gets the value of the 'numero_cadastro_nacional_pessoa_juridica' field.
   * @return The value of the 'numero_cadastro_nacional_pessoa_juridica' field.
   */
  public java.lang.CharSequence getNumeroCadastroNacionalPessoaJuridica() {
    return numero_cadastro_nacional_pessoa_juridica;
  }

  /**
   * Sets the value of the 'numero_cadastro_nacional_pessoa_juridica' field.
   * @param value the value to set.
   */
  public void setNumeroCadastroNacionalPessoaJuridica(java.lang.CharSequence value) {
    this.numero_cadastro_nacional_pessoa_juridica = value;
  }

  /**
   * Creates a new TextoDadoTipoPessoaCobranca RecordBuilder.
   * @return A new TextoDadoTipoPessoaCobranca RecordBuilder
   */
  public static com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder newBuilder() {
    return new com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder();
  }

  /**
   * Creates a new TextoDadoTipoPessoaCobranca RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TextoDadoTipoPessoaCobranca RecordBuilder
   */
  public static com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder newBuilder(com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder other) {
    return new com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder(other);
  }

  /**
   * Creates a new TextoDadoTipoPessoaCobranca RecordBuilder by copying an existing TextoDadoTipoPessoaCobranca instance.
   * @param other The existing instance to copy.
   * @return A new TextoDadoTipoPessoaCobranca RecordBuilder
   */
  public static com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder newBuilder(com.accenture.avro.TextoDadoTipoPessoaCobranca other) {
    return new com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder(other);
  }

  /**
   * RecordBuilder for TextoDadoTipoPessoaCobranca instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TextoDadoTipoPessoaCobranca>
    implements org.apache.avro.data.RecordBuilder<TextoDadoTipoPessoaCobranca> {

    /** Symbols: F,J */
    private java.lang.CharSequence codigo_tipo_pessoa;
    private java.lang.CharSequence numero_cadastro_pessoa_fisica;
    private java.lang.CharSequence numero_cadastro_nacional_pessoa_juridica;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.codigo_tipo_pessoa)) {
        this.codigo_tipo_pessoa = data().deepCopy(fields()[0].schema(), other.codigo_tipo_pessoa);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numero_cadastro_pessoa_fisica)) {
        this.numero_cadastro_pessoa_fisica = data().deepCopy(fields()[1].schema(), other.numero_cadastro_pessoa_fisica);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numero_cadastro_nacional_pessoa_juridica)) {
        this.numero_cadastro_nacional_pessoa_juridica = data().deepCopy(fields()[2].schema(), other.numero_cadastro_nacional_pessoa_juridica);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TextoDadoTipoPessoaCobranca instance
     * @param other The existing instance to copy.
     */
    private Builder(com.accenture.avro.TextoDadoTipoPessoaCobranca other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.codigo_tipo_pessoa)) {
        this.codigo_tipo_pessoa = data().deepCopy(fields()[0].schema(), other.codigo_tipo_pessoa);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numero_cadastro_pessoa_fisica)) {
        this.numero_cadastro_pessoa_fisica = data().deepCopy(fields()[1].schema(), other.numero_cadastro_pessoa_fisica);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numero_cadastro_nacional_pessoa_juridica)) {
        this.numero_cadastro_nacional_pessoa_juridica = data().deepCopy(fields()[2].schema(), other.numero_cadastro_nacional_pessoa_juridica);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'codigo_tipo_pessoa' field.
      * Symbols: F,J
      * @return The value.
      */
    public java.lang.CharSequence getCodigoTipoPessoa() {
      return codigo_tipo_pessoa;
    }

    /**
      * Sets the value of the 'codigo_tipo_pessoa' field.
      * Symbols: F,J
      * @param value The value of 'codigo_tipo_pessoa'.
      * @return This builder.
      */
    public com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder setCodigoTipoPessoa(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.codigo_tipo_pessoa = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'codigo_tipo_pessoa' field has been set.
      * Symbols: F,J
      * @return True if the 'codigo_tipo_pessoa' field has been set, false otherwise.
      */
    public boolean hasCodigoTipoPessoa() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'codigo_tipo_pessoa' field.
      * Symbols: F,J
      * @return This builder.
      */
    public com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder clearCodigoTipoPessoa() {
      codigo_tipo_pessoa = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'numero_cadastro_pessoa_fisica' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumeroCadastroPessoaFisica() {
      return numero_cadastro_pessoa_fisica;
    }

    /**
      * Sets the value of the 'numero_cadastro_pessoa_fisica' field.
      * @param value The value of 'numero_cadastro_pessoa_fisica'.
      * @return This builder.
      */
    public com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder setNumeroCadastroPessoaFisica(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.numero_cadastro_pessoa_fisica = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'numero_cadastro_pessoa_fisica' field has been set.
      * @return True if the 'numero_cadastro_pessoa_fisica' field has been set, false otherwise.
      */
    public boolean hasNumeroCadastroPessoaFisica() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'numero_cadastro_pessoa_fisica' field.
      * @return This builder.
      */
    public com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder clearNumeroCadastroPessoaFisica() {
      numero_cadastro_pessoa_fisica = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'numero_cadastro_nacional_pessoa_juridica' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumeroCadastroNacionalPessoaJuridica() {
      return numero_cadastro_nacional_pessoa_juridica;
    }

    /**
      * Sets the value of the 'numero_cadastro_nacional_pessoa_juridica' field.
      * @param value The value of 'numero_cadastro_nacional_pessoa_juridica'.
      * @return This builder.
      */
    public com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder setNumeroCadastroNacionalPessoaJuridica(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.numero_cadastro_nacional_pessoa_juridica = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'numero_cadastro_nacional_pessoa_juridica' field has been set.
      * @return True if the 'numero_cadastro_nacional_pessoa_juridica' field has been set, false otherwise.
      */
    public boolean hasNumeroCadastroNacionalPessoaJuridica() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'numero_cadastro_nacional_pessoa_juridica' field.
      * @return This builder.
      */
    public com.accenture.avro.TextoDadoTipoPessoaCobranca.Builder clearNumeroCadastroNacionalPessoaJuridica() {
      numero_cadastro_nacional_pessoa_juridica = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TextoDadoTipoPessoaCobranca build() {
      try {
        TextoDadoTipoPessoaCobranca record = new TextoDadoTipoPessoaCobranca();
        record.codigo_tipo_pessoa = fieldSetFlags()[0] ? this.codigo_tipo_pessoa : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.numero_cadastro_pessoa_fisica = fieldSetFlags()[1] ? this.numero_cadastro_pessoa_fisica : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.numero_cadastro_nacional_pessoa_juridica = fieldSetFlags()[2] ? this.numero_cadastro_nacional_pessoa_juridica : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TextoDadoTipoPessoaCobranca>
    WRITER$ = (org.apache.avro.io.DatumWriter<TextoDadoTipoPessoaCobranca>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TextoDadoTipoPessoaCobranca>
    READER$ = (org.apache.avro.io.DatumReader<TextoDadoTipoPessoaCobranca>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
